[tool.poetry]
name = "snakefmt"
version = "0.1.0"
description = "The uncompromising Snakemake code formatter"
authors = ["Michael Hall <michael@mbh.sh>", "Brice Letcher <bletcher@ebi.ac.uk>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/snakemake/snakefmt"
repository = "https://github.com/snakemake/snakefmt"
documentation = "https://github.com/snakemake/snakefmt/blob/master/README.md"
keywords = ["python", "snakemake", "code", "formatter", "parser", "workflow", "management", "systems", "black"]

[tool.poetry.scripts]
snakefmt = 'snakefmt.snakefmt:main'

[tool.poetry.dependencies]
python = "^3.6"
click = "^7.1.1"
black = {version = "^19.10b0", allow-prereleases = true}
toml = "^0.10.0"

[tool.poetry.dev-dependencies]
pytest = "^5.2"
pytest-cov = "^2.8.1"
pre-commit = "^2.1.1"
flake8 = "^3.7.9"
snakemake = "^5.14.0"

[tool.poetry.urls]
"Snakemake Documentation" = "https://snakemake.readthedocs.io/"
"Snakemake Repository" = "https://github.com/snakemake/snakemake"

[tool.black]
line-length = 88
target-version = ['py37']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
)
'''

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

