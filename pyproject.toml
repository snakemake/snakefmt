[project]
name = "snakefmt"
version = "0.11.2"
description = "The uncompromising Snakemake code formatter"
authors = [
    { name = "Michael Hall", email = "mhaldini@icloud.com" },
    { name = "Brice Letcher", email = "brice.letcher@ens-lyon.fr" },
]
requires-python = ">=3.11,<4"
readme = "README.md"
license = "MIT"
keywords = [
    "python",
    "snakemake",
    "code",
    "formatter",
    "parser",
    "workflow",
    "management",
    "systems",
    "black",
]
dependencies = [
    "click>=8.2.0,<9",
    "black>=24.3.0,<25",
]

[project.urls]
Homepage = "https://github.com/snakemake/snakefmt"
Repository = "https://github.com/snakemake/snakefmt"
Documentation = "https://github.com/snakemake/snakefmt/blob/master/README.md"
"Snakemake Documentation" = "https://snakemake.readthedocs.io/"
"Snakemake Repository" = "https://github.com/snakemake/snakemake"

[project.scripts]
snakefmt = "snakefmt.snakefmt:main"

[dependency-groups]
dev = [
    "pytest>=7.4.4,<8",
    "pytest-cov>=4.1.0,<5",
    "flake8~=7.0",
    "snakemake>=9.1.1",
    "isort>=5.1.0,<6",
    "pynvim~=0.4.3",
]

[tool.black]
line-length = 88
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
)
'''

[tool.isort]
profile = "black"

[tool.pytest.ini_options]
testpaths = ["tests"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

